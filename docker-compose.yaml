services:
  django:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      HOST_NAME: db
    depends_on:
      - db

  db:
    image: postgres:14.6-alpine
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

  redis:
    image: redis:7.0.5-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    hostname: redis

  celery:
    build:
        context: .
    hostname: worker
    entrypoint: celery
    command: -A config worker -l DEBUG
    volumes:
      - .:/app
    links:
      - redis
    depends_on:
      - redis

  flower:
    image: mher/flower:0.9.7
    hostname: flower
    command: ['flower', '--broker=redis://redis:6379', '--port=5555']
    volumes:
      - .:/app
    links:
      - redis
    depends_on:
      - redis
      - celery
    ports:
      - 5555:5555